load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
    "rabbitmq_test_helper",
)
load(
    ":app.bzl",
    "all_beam_files",
    "all_srcs",
    "all_test_beam_files",
)

# gazelle:exclude test/src

APP_NAME = "rabbitmq_web_mqtt"

APP_DESCRIPTION = "RabbitMQ MQTT-over-WebSockets adapter"

APP_MODULE = "rabbit_web_mqtt_app"

APP_ENV = """[
	    {tcp_config, [{port, 15675}]},
	    {ssl_config, []},
	    {num_tcp_acceptors, 10},
	    {num_ssl_acceptors, 10},
	    {cowboy_opts, []},
	    {proxy_protocol, false}
	  ]"""

BUILD_DEPS = [
    "//deps/amqp_client:erlang_app",
    "@ranch//:erlang_app",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
    "@cowboy//:erlang_app",
]

RUNTIME_DEPS = [
    "//deps/rabbit:erlang_app",
    "//deps/rabbitmq_mqtt:erlang_app",
]

all_beam_files()

all_test_beam_files()

all_srcs()

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    deps = DEPS + RUNTIME_DEPS,
)

xref()

plt(
    name = "base_plt",
    deps = BUILD_DEPS + DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
    warnings_as_errors = False,
)

broker_for_integration_suites()

PACKAGE = "deps/rabbitmq_web_mqtt"

rabbitmq_test_helper(
    name = "test_utils",
    srcs = glob(["test/src/*.erl"]),
    hdrs = glob(["test/src/*.hrl"]),
)

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "config_schema_SUITE",
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "proxy_protocol_SUITE",
        additional_beam = [":test_utils"],
        additional_hdrs = glob(["test/src/*.hrl"]),
        erlc_opts = [
            "-I",
            "deps/rabbitmq_web_mqtt/test",
        ],
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "system_SUITE",
        additional_beam = [":test_utils"],
        additional_hdrs = glob(["test/src/*.hrl"]),
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)

alias(
    name = "rabbitmq_web_mqtt",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
