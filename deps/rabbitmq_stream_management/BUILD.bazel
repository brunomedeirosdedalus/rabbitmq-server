load("@rules_erlang//:eunit2.bzl", "eunit")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
)
load(
    ":app.bzl",
    "all_beam_files",
    "all_srcs",
    "all_test_beam_files",
    "test_suite_beam_files",
)

APP_NAME = "rabbitmq_stream_management"

APP_DESCRIPTION = "RabbitMQ Stream Management"

APP_MODULE = "rabbit_stream_management"

all_beam_files(name = "all_beam_files")

all_test_beam_files(name = "all_test_beam_files")

all_srcs(name = "all_srcs")

test_suite_beam_files(name = "test_suite_beam_files")

# gazelle:erlang_app_dep rabbitmq_management
# gazelle:erlang_app_dep rabbitmq_stream
# gazelle:erlang_app_dep rabbit

rabbitmq_app(
    name = "erlang_app",
    srcs = [":all_srcs"],
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    beam_files = [":beam_files"],
    deps = [
        "//deps/rabbit:erlang_app",
        "//deps/rabbitmq_management:erlang_app",
        "//deps/rabbitmq_stream:erlang_app",
    ],
)

xref(
    name = "xref",
    target = ":erlang_app",
)

plt(
    name = "deps_plt",
    for_target = ":erlang_app",
    plt = "//:base_plt",
)

dialyze(
    name = "dialyze",
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":deps_plt",
    target = ":erlang_app",
)

eunit(
    name = "eunit",
    compiled_suites = [],
    eunit_mods = [
        "rabbit_stream_connection_consumers_mgmt",
        "rabbit_stream_connection_mgmt",
        "rabbit_stream_connection_publishers_mgmt",
        "rabbit_stream_connections_mgmt",
        "rabbit_stream_connections_vhost_mgmt",
        "rabbit_stream_consumers_mgmt",
        "rabbit_stream_management_utils",
        "rabbit_stream_mgmt_db",
        "rabbit_stream_publishers_mgmt",
    ],
    deps = [":test_erlang_app"],
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:erlang_app",
        "//deps/rabbitmq_amqp1_0:erlang_app",
        ":erlang_app",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

rabbitmq_integration_suite(
    name = "http_SUITE",
)

assert_suites()

alias(
    name = "rabbitmq_stream_management",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
