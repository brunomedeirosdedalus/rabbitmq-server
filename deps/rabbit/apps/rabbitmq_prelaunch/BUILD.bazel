load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("//:rabbitmq.bzl", "APP_VERSION", "rabbitmq_app", "rabbitmq_suite")
load(
    ":app.bzl",
    "all_beam_files",
    "all_srcs",
    "all_test_beam_files",
)

APP_NAME = "rabbitmq_prelaunch"

APP_DESCRIPTION = "RabbitMQ prelaunch setup"

APP_MODULE = "rabbit_prelaunch_app"

RUNTIME_DEPS = [
    "@cuttlefish//:erlang_app",
    "@thoas//:erlang_app",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
]

all_beam_files()

all_test_beam_files()

all_srcs()

rabbitmq_app(
    all_srcs = [":all_srcs"],
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    beam_files = [":beam_files"],
    deps = DEPS + RUNTIME_DEPS,
)

xref(
    additional_libs = [
        "@systemd//:erlang_app",
        "@osiris//:erlang_app",
    ],
)

plt(
    name = "base_plt",
    deps = DEPS,
)

dialyze(
    plt = ":base_plt",
    warnings_as_errors = False,
)

suites = [
    rabbitmq_suite(
        name = "rabbit_logger_std_h_SUITE",
    ),
    rabbitmq_suite(
        name = "rabbit_prelaunch_file_SUITE",
        size = "small",
    ),
]

alias(
    name = "rabbitmq_prelaunch",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
