load("@rules_erlang//:eunit2.bzl", "eunit")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "BROKER_VERSION_REQUIREMENTS_ANY",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
)
load(
    ":app.bzl",
    "all_beam_files",
    "all_srcs",
    "all_test_beam_files",
    "test_suite_beam_files",
)

APP_NAME = "rabbitmq_tracing"

APP_DESCRIPTION = "RabbitMQ message logging / tracing"

APP_MODULE = "rabbit_tracing_app"

APP_ENV = """[
	    {directory, "/var/tmp/rabbitmq-tracing"},
	    {username, <<"guest">>},
	    {password, <<"guest">>}
	  ]"""

BUILD_DEPS = [
    "//deps/amqp_client:erlang_app",
    "//deps/rabbitmq_management_agent:erlang_app",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
    "//deps/rabbitmq_management:erlang_app",
]

RUNTIME_DEPS = [
    "//deps/rabbit:erlang_app",
]

all_beam_files(name = "all_beam_files")

all_test_beam_files(name = "all_test_beam_files")

all_srcs(name = "all_srcs")

test_suite_beam_files(name = "test_suite_beam_files")

# gazelle:erlang_app_dep rabbit_common
# gazelle:erlang_app_dep rabbitmq_management
# gazelle:erlang_app_dep rabbit

rabbitmq_app(
    name = "erlang_app",
    srcs = [":all_srcs"],
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_extra_keys = BROKER_VERSION_REQUIREMENTS_ANY,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    beam_files = [":beam_files"],
    deps = [
        "//deps/rabbit:erlang_app",
        "//deps/rabbit_common:erlang_app",
        "//deps/rabbitmq_management:erlang_app",
    ],
)

xref()

plt(
    name = "base_plt",
    deps = BUILD_DEPS + DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

eunit(
    name = "eunit",
    compiled_suites = [],
    eunit_mods = [
        "rabbit_tracing_app",
        "rabbit_tracing_consumer",
        "rabbit_tracing_consumer_sup",
        "rabbit_tracing_files",
        "rabbit_tracing_mgmt",
        "rabbit_tracing_sup",
        "rabbit_tracing_traces",
        "rabbit_tracing_util",
        "rabbit_tracing_wm_file",
        "rabbit_tracing_wm_files",
        "rabbit_tracing_wm_trace",
        "rabbit_tracing_wm_traces",
    ],
    deps = [":test_erlang_app"],
)

broker_for_integration_suites()

rabbitmq_integration_suite(
    name = "rabbit_tracing_SUITE",
)

assert_suites()

alias(
    name = "rabbitmq_tracing",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
